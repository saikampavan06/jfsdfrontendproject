{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD-PROJECT\\\\frontend\\\\src\\\\components\\\\UploadResource.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadResource.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadResource() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    category: '',\n    tags: '',\n    author: '',\n    publicationDate: '',\n    coverPhoto: null,\n    pdfFile: null // Added field for PDF file\n  });\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const {\n      name\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Use FormData to include files in the form submission\n    const resourceData = new FormData();\n    resourceData.append(\"title\", formData.title);\n    resourceData.append(\"description\", formData.description);\n    resourceData.append(\"category\", formData.category);\n    resourceData.append(\"tags\", formData.tags);\n    resourceData.append(\"author\", formData.author);\n    resourceData.append(\"publicationDate\", formData.publicationDate);\n    resourceData.append(\"coverPhoto\", formData.coverPhoto); // Add cover photo file\n    resourceData.append(\"pdfFile\", formData.pdfFile); // Add PDF file\n\n    try {\n      const response = await fetch('http://localhost:8080/api/upload', {\n        method: 'POST',\n        body: resourceData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(data.message);\n      } else {\n        setMessage('Error: Could not upload the resource');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      setMessage('Error: An error occurred during upload');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload New Resource\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tags\",\n        placeholder: \"Tags (comma-separated)\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"publicationDate\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"coverPhoto\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdfFile\",\n        onChange: handleFileChange,\n        accept: \".pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"Upload Resource\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadResource, \"RhUDDQQcuHrbZ+t8WqPrf919RVw=\");\n_c = UploadResource;\nexport default UploadResource;\nvar _c;\n$RefreshReg$(_c, \"UploadResource\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadResource","_s","formData","setFormData","title","description","category","tags","author","publicationDate","coverPhoto","pdfFile","message","setMessage","handleChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","resourceData","FormData","append","response","fetch","method","body","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","accept","_c","$RefreshReg$"],"sources":["D:/JFSD-PROJECT/frontend/src/components/UploadResource.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './UploadResource.css';\r\n\r\nfunction UploadResource() {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        category: '',\r\n        tags: '',\r\n        author: '',\r\n        publicationDate: '',\r\n        coverPhoto: null,\r\n        pdfFile: null, // Added field for PDF file\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { name } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: e.target.files[0],\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Use FormData to include files in the form submission\r\n        const resourceData = new FormData();\r\n        resourceData.append(\"title\", formData.title);\r\n        resourceData.append(\"description\", formData.description);\r\n        resourceData.append(\"category\", formData.category);\r\n        resourceData.append(\"tags\", formData.tags);\r\n        resourceData.append(\"author\", formData.author);\r\n        resourceData.append(\"publicationDate\", formData.publicationDate);\r\n        resourceData.append(\"coverPhoto\", formData.coverPhoto); // Add cover photo file\r\n        resourceData.append(\"pdfFile\", formData.pdfFile); // Add PDF file\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/upload', {\r\n                method: 'POST',\r\n                body: resourceData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setMessage(data.message);\r\n            } else {\r\n                setMessage('Error: Could not upload the resource');\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            setMessage('Error: An error occurred during upload');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <h2>Upload New Resource</h2>\r\n            <form onSubmit={handleSubmit} className=\"upload-form\">\r\n                <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={handleChange} required />\r\n                <textarea name=\"description\" placeholder=\"Description\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"category\" placeholder=\"Category\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"tags\" placeholder=\"Tags (comma-separated)\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"author\" placeholder=\"Author\" onChange={handleChange} />\r\n                <input type=\"date\" name=\"publicationDate\" onChange={handleChange} />\r\n                \r\n                {/* File inputs for cover photo and PDF */}\r\n                <input type=\"file\" name=\"coverPhoto\" onChange={handleFileChange} accept=\"image/*\" />\r\n                <input type=\"file\" name=\"pdfFile\" onChange={handleFileChange} accept=\".pdf\" />\r\n\r\n                <button type=\"submit\" className=\"upload-button\">Upload Resource</button>\r\n            </form>\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadResource;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}