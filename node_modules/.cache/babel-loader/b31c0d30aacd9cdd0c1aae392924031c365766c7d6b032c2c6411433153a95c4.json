{"ast":null,"code":"// Function to show the selected payment option (QR or Card)\nfunction showPaymentOption(option) {\n  // Hide all payment sections initially\n  const paymentDetails = document.querySelectorAll('.payment-details');\n  paymentDetails.forEach(section => {\n    section.classList.remove('active');\n  });\n\n  // Show the selected payment section\n  const selectedPayment = document.getElementById(option);\n  selectedPayment.classList.add('active');\n}\n\n// Example of a simple form validation for card payment\nfunction validateCardPayment() {\n  const cardName = document.getElementById('cardName').value;\n  const cardNum = document.getElementById('cardNum').value;\n  const expMonth = document.getElementById('expMonth').value;\n  const expYear = document.getElementById('expYear').value;\n  const cvv = document.getElementById('cvv').value;\n\n  // Basic validation (you can expand it as needed)\n  if (!cardName || !cardNum || !expMonth || !expYear || !cvv) {\n    alert(\"Please fill in all fields.\");\n    return false;\n  }\n  alert(\"Payment submitted successfully!\");\n  return true;\n}\n\n// Form submission handler\ndocument.getElementById(\"paymentForm\").addEventListener(\"submit\", function (e) {\n  e.preventDefault(); // Prevent actual form submission\n\n  // Check which payment method is active\n  const activePaymentMethod = document.querySelector('.payment-details.active');\n  if (activePaymentMethod.id === 'card') {\n    // Perform card payment validation\n    validateCardPayment();\n  } else {\n    // QR payment doesn't require validation\n    alert(\"QR Code Payment Successful!\");\n  }\n});","map":{"version":3,"names":["showPaymentOption","option","paymentDetails","document","querySelectorAll","forEach","section","classList","remove","selectedPayment","getElementById","add","validateCardPayment","cardName","value","cardNum","expMonth","expYear","cvv","alert","addEventListener","e","preventDefault","activePaymentMethod","querySelector","id"],"sources":["C:/Users/Admin/Desktop/JFSD/frontend/frontend/src/components/Payment.js"],"sourcesContent":["// Function to show the selected payment option (QR or Card)\r\nfunction showPaymentOption(option) {\r\n    // Hide all payment sections initially\r\n    const paymentDetails = document.querySelectorAll('.payment-details');\r\n    paymentDetails.forEach(section => {\r\n        section.classList.remove('active');\r\n    });\r\n\r\n    // Show the selected payment section\r\n    const selectedPayment = document.getElementById(option);\r\n    selectedPayment.classList.add('active');\r\n}\r\n\r\n// Example of a simple form validation for card payment\r\nfunction validateCardPayment() {\r\n    const cardName = document.getElementById('cardName').value;\r\n    const cardNum = document.getElementById('cardNum').value;\r\n    const expMonth = document.getElementById('expMonth').value;\r\n    const expYear = document.getElementById('expYear').value;\r\n    const cvv = document.getElementById('cvv').value;\r\n\r\n    // Basic validation (you can expand it as needed)\r\n    if (!cardName || !cardNum || !expMonth || !expYear || !cvv) {\r\n        alert(\"Please fill in all fields.\");\r\n        return false;\r\n    }\r\n\r\n    alert(\"Payment submitted successfully!\");\r\n    return true;\r\n}\r\n\r\n// Form submission handler\r\ndocument.getElementById(\"paymentForm\").addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent actual form submission\r\n\r\n    // Check which payment method is active\r\n    const activePaymentMethod = document.querySelector('.payment-details.active');\r\n\r\n    if (activePaymentMethod.id === 'card') {\r\n        // Perform card payment validation\r\n        validateCardPayment();\r\n    } else {\r\n        // QR payment doesn't require validation\r\n        alert(\"QR Code Payment Successful!\");\r\n    }\r\n});\r\n"],"mappings":"AAAA;AACA,SAASA,iBAAiBA,CAACC,MAAM,EAAE;EAC/B;EACA,MAAMC,cAAc,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,CAAC;EACpEF,cAAc,CAACG,OAAO,CAACC,OAAO,IAAI;IAC9BA,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACtC,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAGN,QAAQ,CAACO,cAAc,CAACT,MAAM,CAAC;EACvDQ,eAAe,CAACF,SAAS,CAACI,GAAG,CAAC,QAAQ,CAAC;AAC3C;;AAEA;AACA,SAASC,mBAAmBA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAGV,QAAQ,CAACO,cAAc,CAAC,UAAU,CAAC,CAACI,KAAK;EAC1D,MAAMC,OAAO,GAAGZ,QAAQ,CAACO,cAAc,CAAC,SAAS,CAAC,CAACI,KAAK;EACxD,MAAME,QAAQ,GAAGb,QAAQ,CAACO,cAAc,CAAC,UAAU,CAAC,CAACI,KAAK;EAC1D,MAAMG,OAAO,GAAGd,QAAQ,CAACO,cAAc,CAAC,SAAS,CAAC,CAACI,KAAK;EACxD,MAAMI,GAAG,GAAGf,QAAQ,CAACO,cAAc,CAAC,KAAK,CAAC,CAACI,KAAK;;EAEhD;EACA,IAAI,CAACD,QAAQ,IAAI,CAACE,OAAO,IAAI,CAACC,QAAQ,IAAI,CAACC,OAAO,IAAI,CAACC,GAAG,EAAE;IACxDC,KAAK,CAAC,4BAA4B,CAAC;IACnC,OAAO,KAAK;EAChB;EAEAA,KAAK,CAAC,iCAAiC,CAAC;EACxC,OAAO,IAAI;AACf;;AAEA;AACAhB,QAAQ,CAACO,cAAc,CAAC,aAAa,CAAC,CAACU,gBAAgB,CAAC,QAAQ,EAAE,UAASC,CAAC,EAAE;EAC1EA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,MAAMC,mBAAmB,GAAGpB,QAAQ,CAACqB,aAAa,CAAC,yBAAyB,CAAC;EAE7E,IAAID,mBAAmB,CAACE,EAAE,KAAK,MAAM,EAAE;IACnC;IACAb,mBAAmB,CAAC,CAAC;EACzB,CAAC,MAAM;IACH;IACAO,KAAK,CAAC,6BAA6B,CAAC;EACxC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}