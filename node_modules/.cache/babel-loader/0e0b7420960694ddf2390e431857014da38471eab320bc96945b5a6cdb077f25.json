{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\JFSD\\\\frontend\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\n  const [amount, setAmount] = useState(100); // Example amount, you can modify this\n\n  const handlePayment = () => {\n    switch (selectedPaymentMethod) {\n      case 'stripe':\n        initiateStripePayment();\n        break;\n      case 'paypal':\n        initiatePaypalPayment();\n        break;\n      case 'razorpay':\n        initiateRazorpayPayment();\n        break;\n      default:\n        alert('Please select a payment method.');\n    }\n  };\n  const initiateStripePayment = () => {\n    // Stripe integration (you'll need to install Stripe JS library)\n    // This is a placeholder; actual implementation would need a backend to create the payment intent.\n    console.log(`Initiating Stripe Payment for $${amount}`);\n  };\n  const initiatePaypalPayment = () => {\n    // PayPal integration\n    // This would require PayPal's SDK and setup\n    console.log(`Initiating PayPal Payment for $${amount}`);\n  };\n  const initiateRazorpayPayment = () => {\n    // Razorpay integration\n    // This would require Razorpay's API setup\n    console.log(`Initiating Razorpay Payment for ₹${amount}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"stripe\",\n          onChange: e => setSelectedPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \"Stripe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"paypal\",\n          onChange: e => setSelectedPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \"PayPal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"paymentMethod\",\n          value: \"razorpay\",\n          onChange: e => setSelectedPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"Razorpay\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Proceed to Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"DSMh0US3pNkJCpBlwrQXr/087i0=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentPage","_s","selectedPaymentMethod","setSelectedPaymentMethod","amount","setAmount","handlePayment","initiateStripePayment","initiatePaypalPayment","initiateRazorpayPayment","alert","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/JFSD/frontend/frontend/src/components/Payment.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst PaymentPage = () => {\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n  const [amount, setAmount] = useState(100); // Example amount, you can modify this\r\n\r\n  const handlePayment = () => {\r\n    switch (selectedPaymentMethod) {\r\n      case 'stripe':\r\n        initiateStripePayment();\r\n        break;\r\n      case 'paypal':\r\n        initiatePaypalPayment();\r\n        break;\r\n      case 'razorpay':\r\n        initiateRazorpayPayment();\r\n        break;\r\n      default:\r\n        alert('Please select a payment method.');\r\n    }\r\n  };\r\n\r\n  const initiateStripePayment = () => {\r\n    // Stripe integration (you'll need to install Stripe JS library)\r\n    // This is a placeholder; actual implementation would need a backend to create the payment intent.\r\n    console.log(`Initiating Stripe Payment for $${amount}`);\r\n  };\r\n\r\n  const initiatePaypalPayment = () => {\r\n    // PayPal integration\r\n    // This would require PayPal's SDK and setup\r\n    console.log(`Initiating PayPal Payment for $${amount}`);\r\n  };\r\n\r\n  const initiateRazorpayPayment = () => {\r\n    // Razorpay integration\r\n    // This would require Razorpay's API setup\r\n    console.log(`Initiating Razorpay Payment for ₹${amount}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <h2>Choose Payment Method</h2>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"stripe\"\r\n            onChange={(e) => setSelectedPaymentMethod(e.target.value)}\r\n          />\r\n          Stripe\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"paypal\"\r\n            onChange={(e) => setSelectedPaymentMethod(e.target.value)}\r\n          />\r\n          PayPal\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"razorpay\"\r\n            onChange={(e) => setSelectedPaymentMethod(e.target.value)}\r\n          />\r\n          Razorpay\r\n        </label>\r\n      </div>\r\n\r\n      <button onClick={handlePayment}>Proceed to Pay</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}