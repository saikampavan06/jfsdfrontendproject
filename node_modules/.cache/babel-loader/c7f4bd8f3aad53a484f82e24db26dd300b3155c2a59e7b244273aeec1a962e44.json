{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD-PROJECT\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './LoginSignup.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [captcha, setCaptcha] = useState('');\n  const [captchaInput, setCaptchaInput] = useState('');\n  const navigate = useNavigate();\n\n  // Function to generate a random captcha word\n  const generateCaptcha = () => {\n    const words = ['apple', 'banana', 'cherry', 'date', 'elderberry', 'fig', 'grape'];\n    setCaptcha(words[Math.floor(Math.random() * words.length)]);\n  };\n\n  // Generate captcha on component mount\n  useEffect(() => {\n    generateCaptcha();\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Check if the entered captcha matches the generated captcha\n    if (captchaInput.toLowerCase() !== captcha.toLowerCase()) {\n      alert(\"Captcha is incorrect. Please try again.\");\n      generateCaptcha(); // Refresh the captcha on incorrect input\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:8080/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n\n        // Redirect based on role\n        if (data.role === \"ADMIN\") {\n          navigate(\"/admin-home\");\n        } else if (data.role === \"USER\") {\n          navigate(\"/user-home\");\n        } else if (data.role === \"FACULTY\") {\n          navigate(\"/faculty-home\");\n        }\n      } else {\n        alert(\"Invalid credentials. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      alert(\"An error occurred during login.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"captcha-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"captcha-text\",\n          children: [\"Captcha: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: captcha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter captcha\",\n          value: captchaInput,\n          onChange: e => setCaptchaInput(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remember-forgot\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forgot-password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New user? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"kOkCgAOjQRRqD6zkwL6fDHd71Rk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","captcha","setCaptcha","captchaInput","setCaptchaInput","navigate","generateCaptcha","words","Math","floor","random","length","handleLogin","e","preventDefault","toLowerCase","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","role","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["D:/JFSD-PROJECT/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './LoginSignup.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [captcha, setCaptcha] = useState('');\r\n    const [captchaInput, setCaptchaInput] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // Function to generate a random captcha word\r\n    const generateCaptcha = () => {\r\n        const words = ['apple', 'banana', 'cherry', 'date', 'elderberry', 'fig', 'grape'];\r\n        setCaptcha(words[Math.floor(Math.random() * words.length)]);\r\n    };\r\n\r\n    // Generate captcha on component mount\r\n    useEffect(() => {\r\n        generateCaptcha();\r\n    }, []);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if the entered captcha matches the generated captcha\r\n        if (captchaInput.toLowerCase() !== captcha.toLowerCase()) {\r\n            alert(\"Captcha is incorrect. Please try again.\");\r\n            generateCaptcha(); // Refresh the captcha on incorrect input\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:8080/api/login\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ username, password })\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                alert(data.message);\r\n\r\n                // Redirect based on role\r\n                if (data.role === \"ADMIN\") {\r\n                    navigate(\"/admin-home\");\r\n                } else if (data.role === \"USER\") {\r\n                    navigate(\"/user-home\");\r\n                } else if (data.role === \"FACULTY\") {\r\n                    navigate(\"/faculty-home\");\r\n                }\r\n            } else {\r\n                alert(\"Invalid credentials. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Login error:\", error);\r\n            alert(\"An error occurred during login.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-container\">\r\n            <form onSubmit={handleLogin} className=\"auth-form\">\r\n                <h2>Login</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n\r\n                {/* Captcha Display */}\r\n                <div className=\"captcha-container\">\r\n                    <p className=\"captcha-text\">Captcha: <strong>{captcha}</strong></p>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter captcha\"\r\n                        value={captchaInput}\r\n                        onChange={(e) => setCaptchaInput(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\">Log In</button>\r\n                <div className=\"remember-forgot\">\r\n                    <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                </div>\r\n                <p>New user? <Link to=\"/signup\">Register</Link></p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}