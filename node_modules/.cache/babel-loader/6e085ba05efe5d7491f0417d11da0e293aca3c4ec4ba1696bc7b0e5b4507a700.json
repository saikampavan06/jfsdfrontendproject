{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD-PROJECT\\\\frontend\\\\src\\\\components\\\\UploadResource.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadResource.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadResource() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    category: '',\n    tags: '',\n    author: '',\n    publicationDate: ''\n  });\n  const [coverPhoto, setCoverPhoto] = useState(null);\n  const [pdfFile, setPdfFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    const {\n      name,\n      files\n    } = e.target;\n    if (name === 'coverPhoto') {\n      setCoverPhoto(files[0]);\n    } else if (name === 'pdfFile') {\n      setPdfFile(files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create FormData object to hold text and file data\n    const data = new FormData();\n    data.append('title', formData.title);\n    data.append('description', formData.description);\n    data.append('category', formData.category);\n    data.append('tags', formData.tags);\n    data.append('author', formData.author);\n    data.append('publicationDate', formData.publicationDate);\n    if (coverPhoto) data.append('coverPhoto', coverPhoto);\n    if (pdfFile) data.append('pdfFile', pdfFile);\n    try {\n      const response = await fetch('http://localhost:8080/api/upload', {\n        method: 'POST',\n        body: data\n      });\n      const responseData = await response.json();\n      if (response.ok) {\n        setMessage(responseData.message || 'Resource uploaded successfully!');\n      } else {\n        setMessage('Error: Could not upload the resource');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      setMessage('Error: An error occurred during upload');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload New Resource\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tags\",\n        placeholder: \"Tags (comma-separated)\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        placeholder: \"Author\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"publicationDate\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"coverPhoto\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"pdfFile\",\n        onChange: handleFileChange,\n        accept: \".pdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"upload-button\",\n        children: \"Upload Resource\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadResource, \"cmrrc6W62q8CMr48etxnLiYLibg=\");\n_c = UploadResource;\nexport default UploadResource;\nvar _c;\n$RefreshReg$(_c, \"UploadResource\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadResource","_s","formData","setFormData","title","description","category","tags","author","publicationDate","coverPhoto","setCoverPhoto","pdfFile","setPdfFile","message","setMessage","handleChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","data","FormData","append","response","fetch","method","body","responseData","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","accept","_c","$RefreshReg$"],"sources":["D:/JFSD-PROJECT/frontend/src/components/UploadResource.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './UploadResource.css';\r\n\r\nfunction UploadResource() {\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        category: '',\r\n        tags: '',\r\n        author: '',\r\n        publicationDate: '',\r\n    });\r\n    const [coverPhoto, setCoverPhoto] = useState(null);\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const { name, files } = e.target;\r\n        if (name === 'coverPhoto') {\r\n            setCoverPhoto(files[0]);\r\n        } else if (name === 'pdfFile') {\r\n            setPdfFile(files[0]);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Create FormData object to hold text and file data\r\n        const data = new FormData();\r\n        data.append('title', formData.title);\r\n        data.append('description', formData.description);\r\n        data.append('category', formData.category);\r\n        data.append('tags', formData.tags);\r\n        data.append('author', formData.author);\r\n        data.append('publicationDate', formData.publicationDate);\r\n        \r\n        if (coverPhoto) data.append('coverPhoto', coverPhoto);\r\n        if (pdfFile) data.append('pdfFile', pdfFile);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:8080/api/upload', {\r\n                method: 'POST',\r\n                body: data,\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            if (response.ok) {\r\n                setMessage(responseData.message || 'Resource uploaded successfully!');\r\n            } else {\r\n                setMessage('Error: Could not upload the resource');\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            setMessage('Error: An error occurred during upload');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"upload-container\">\r\n            <h2>Upload New Resource</h2>\r\n            <form onSubmit={handleSubmit} className=\"upload-form\">\r\n                <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={handleChange} required />\r\n                <textarea name=\"description\" placeholder=\"Description\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"category\" placeholder=\"Category\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"tags\" placeholder=\"Tags (comma-separated)\" onChange={handleChange} />\r\n                <input type=\"text\" name=\"author\" placeholder=\"Author\" onChange={handleChange} />\r\n                <input type=\"date\" name=\"publicationDate\" onChange={handleChange} />\r\n                <input type=\"file\" name=\"coverPhoto\" onChange={handleFileChange} accept=\"image/*\" />\r\n                <input type=\"file\" name=\"pdfFile\" onChange={handleFileChange} accept=\".pdf\" />\r\n\r\n                <button type=\"submit\" className=\"upload-button\">Upload Resource</button>\r\n            </form>\r\n            {message && <p className=\"message\">{message}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadResource;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}