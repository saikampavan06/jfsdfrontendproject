{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD-PROJECT\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Signup() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [password, setPassword] = useState('');\n  const [retypePassword, setRetypePassword] = useState('');\n  const handleSignup = async e => {\n    e.preventDefault();\n    if (password !== retypePassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    const response = await fetch(\"http://localhost:8080/api/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        phoneNumber,\n        password,\n        role: \"USER\"\n      })\n    });\n    if (response.ok) {\n      alert(\"User registered successfully!\");\n    } else {\n      alert(\"Registration failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSignup,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      placeholder: \"Phone Number\",\n      value: phoneNumber,\n      onChange: e => setPhoneNumber(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Retype Password\",\n      value: retypePassword,\n      onChange: e => setRetypePassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Signup, \"LPM+QKB/bwxc+iBMjnRMmN3xRME=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","retypePassword","setRetypePassword","handleSignup","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","role","ok","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/JFSD-PROJECT/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Signup() {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [retypePassword, setRetypePassword] = useState('');\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        if (password !== retypePassword) {\r\n            alert(\"Passwords do not match\");\r\n            return;\r\n        }\r\n        const response = await fetch(\"http://localhost:8080/api/register\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username, email, phoneNumber, password, role: \"USER\" })\r\n        });\r\n        if (response.ok) {\r\n            alert(\"User registered successfully!\");\r\n        } else {\r\n            alert(\"Registration failed.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSignup}>\r\n            <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n            <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n            <input type=\"tel\" placeholder=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\r\n            <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n            <input type=\"password\" placeholder=\"Retype Password\" value={retypePassword} onChange={(e) => setRetypePassword(e.target.value)} required />\r\n            <button type=\"submit\">Sign Up</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}