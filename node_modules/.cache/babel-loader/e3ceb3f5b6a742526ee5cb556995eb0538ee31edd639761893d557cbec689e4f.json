{"ast":null,"code":"var _jsxFileName = \"D:\\\\JFSD-PROJECT\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  useEffect(() => {\n    if (!token) {\n      setMessage(\"Invalid or expired token\");\n    }\n  }, [token]);\n  const handlePasswordReset = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/reset-password', {\n        token: token,\n        newPassword: newPassword\n      });\n      setMessage(response.data);\n    } catch (error) {\n      setMessage(\"Error resetting password\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      placeholder: \"Enter new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordReset,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"MRf7fwBg0LT7iT+kW7hvlAjTHzw=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","message","setMessage","searchParams","token","get","handlePasswordReset","response","post","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/JFSD-PROJECT/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nfunction ResetPassword() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get('token');\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setMessage(\"Invalid or expired token\");\r\n    }\r\n  }, [token]);\r\n\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/reset-password', {\r\n        token: token,\r\n        newPassword: newPassword,\r\n      });\r\n      setMessage(response.data);\r\n    } catch (error) {\r\n      setMessage(\"Error resetting password\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Reset Your Password</h2>\r\n      {message && <p>{message}</p>}\r\n      <input\r\n        type=\"password\"\r\n        value={newPassword}\r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n        placeholder=\"Enter new password\"\r\n      />\r\n      <button onClick={handlePasswordReset}>Reset Password</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,YAAY,CAAC,GAAGT,eAAe,CAAC,CAAC;EACxC,MAAMU,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EAEvCb,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,KAAK,EAAE;MACVF,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC,EAAE,CAACE,KAAK,CAAC,CAAC;EAEX,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,0CAA0C,EAAE;QAC5EJ,KAAK,EAAEA,KAAK;QACZL,WAAW,EAAEA;MACf,CAAC,CAAC;MACFG,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,UAAU,CAAC,0BAA0B,CAAC;IACxC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Bd,OAAO,iBAAIL,OAAA;MAAAe,QAAA,EAAIV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFnB,OAAA;MAAQ0B,OAAO,EAAEhB,mBAAoB;MAAAK,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAACjB,EAAA,CArCQD,aAAa;EAAA,QAGGH,eAAe;AAAA;AAAA6B,EAAA,GAH/B1B,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}